/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Control.ControlVentana;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 * Vista que muestra al ganador de la carrera.
 * Esta ventana se despliega al finalizar la carrera, destacando visualmente 
 * al competidor que haya llegado primero a la meta.
 * @author hailen
 */
public class GanadorView extends javax.swing.JFrame {
    private ControlVentana cVentana;

    /**
     * Creates new form GanadorView
     */
    /**
 * Constructor de la clase GanadorView.
 * Inicializa la ventana gráfica que muestra al ganador de la carrera y 
 * establece la referencia al controlador principal.
 * 
 * @param cVentana instancia del controlador principal para manejar eventos y navegación.
 */
    public GanadorView(ControlVentana cVentana) {
        this.cVentana = cVentana;
        initComponents();
    }

    /**
 * Inicializa y configura todos los componentes gráficos de la ventana GanadorView.
 * Este método crea paneles individuales para cada competidor (Goku, Pikachu, Sonic, Nyan Cat),
 * mostrando su imagen animada de victoria, el número de victorias y el tiempo de llegada.
 * Además, configura el botón "CONTINUAR" para avanzar en la aplicación.
 * 
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnContinuar = new javax.swing.JButton();
        jPANEL_CONTENEDOR = new javax.swing.JPanel();
        PANEL_GOKU = new javax.swing.JPanel();
        lblImagenGoku = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblVictoriaGoku = new javax.swing.JLabel();
        lblTiempoGoku = new javax.swing.JLabel();
        PANEL_PIKA = new javax.swing.JPanel();
        lblImagenPikachu = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblVictoriaPika = new javax.swing.JLabel();
        lblTiempoPika = new javax.swing.JLabel();
        PANEL_SONIC = new javax.swing.JPanel();
        lblImagenSonic = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblVictoriaSonic = new javax.swing.JLabel();
        lblTiempoSonic = new javax.swing.JLabel();
        PANEL_NYANCAT = new javax.swing.JPanel();
        lblImagenNyancat = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lblVictoriaNyan = new javax.swing.JLabel();
        lblTiempoNyan = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnContinuar.setBackground(new java.awt.Color(0, 153, 51));
        btnContinuar.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnContinuar.setForeground(new java.awt.Color(255, 255, 255));
        btnContinuar.setText("CONTINUAR");
        btnContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinuarActionPerformed(evt);
            }
        });

        jPANEL_CONTENEDOR.setBackground(new java.awt.Color(0, 0, 0));
        jPANEL_CONTENEDOR.setLayout(new java.awt.CardLayout());

        PANEL_GOKU.setBackground(new java.awt.Color(0, 4, 25));

        lblImagenGoku.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/gokuGANADOR.gif"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("GANADOR: GOKU");

        lblVictoriaGoku.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblVictoriaGoku.setForeground(new java.awt.Color(255, 255, 255));
        lblVictoriaGoku.setText("Victorias: ");

        lblTiempoGoku.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblTiempoGoku.setForeground(new java.awt.Color(255, 255, 255));
        lblTiempoGoku.setText("Tiempo: ");

        javax.swing.GroupLayout PANEL_GOKULayout = new javax.swing.GroupLayout(PANEL_GOKU);
        PANEL_GOKU.setLayout(PANEL_GOKULayout);
        PANEL_GOKULayout.setHorizontalGroup(
            PANEL_GOKULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PANEL_GOKULayout.createSequentialGroup()
                .addGroup(PANEL_GOKULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PANEL_GOKULayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(lblImagenGoku))
                    .addGroup(PANEL_GOKULayout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PANEL_GOKULayout.createSequentialGroup()
                .addGap(0, 72, Short.MAX_VALUE)
                .addGroup(PANEL_GOKULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVictoriaGoku, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTiempoGoku, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(305, 305, 305))
        );
        PANEL_GOKULayout.setVerticalGroup(
            PANEL_GOKULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PANEL_GOKULayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImagenGoku)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTiempoGoku)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblVictoriaGoku)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPANEL_CONTENEDOR.add(PANEL_GOKU, "Goku");

        PANEL_PIKA.setBackground(new java.awt.Color(0, 4, 25));

        lblImagenPikachu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/pikachuGANADOR.gif"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("GANADOR: PIKACHU");

        lblVictoriaPika.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblVictoriaPika.setForeground(new java.awt.Color(255, 255, 255));
        lblVictoriaPika.setText("Victorias: ");

        lblTiempoPika.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblTiempoPika.setForeground(new java.awt.Color(255, 255, 255));
        lblTiempoPika.setText("Tiempo: ");

        javax.swing.GroupLayout PANEL_PIKALayout = new javax.swing.GroupLayout(PANEL_PIKA);
        PANEL_PIKA.setLayout(PANEL_PIKALayout);
        PANEL_PIKALayout.setHorizontalGroup(
            PANEL_PIKALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PANEL_PIKALayout.createSequentialGroup()
                .addGap(0, 72, Short.MAX_VALUE)
                .addGroup(PANEL_PIKALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVictoriaPika, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTiempoPika, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(305, 305, 305))
            .addGroup(PANEL_PIKALayout.createSequentialGroup()
                .addGroup(PANEL_PIKALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PANEL_PIKALayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(lblImagenPikachu))
                    .addGroup(PANEL_PIKALayout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PANEL_PIKALayout.setVerticalGroup(
            PANEL_PIKALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PANEL_PIKALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImagenPikachu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTiempoPika)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblVictoriaPika)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPANEL_CONTENEDOR.add(PANEL_PIKA, "Pikachu");

        PANEL_SONIC.setBackground(new java.awt.Color(0, 4, 25));

        lblImagenSonic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/sonicGANADOR.gif"))); // NOI18N
        lblImagenSonic.setPreferredSize(new java.awt.Dimension(400, 400));

        jLabel11.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("GANADOR: SONIC");

        lblVictoriaSonic.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblVictoriaSonic.setForeground(new java.awt.Color(255, 255, 255));
        lblVictoriaSonic.setText("Victorias: ");

        lblTiempoSonic.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblTiempoSonic.setForeground(new java.awt.Color(255, 255, 255));
        lblTiempoSonic.setText("Tiempo: ");

        javax.swing.GroupLayout PANEL_SONICLayout = new javax.swing.GroupLayout(PANEL_SONIC);
        PANEL_SONIC.setLayout(PANEL_SONICLayout);
        PANEL_SONICLayout.setHorizontalGroup(
            PANEL_SONICLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PANEL_SONICLayout.createSequentialGroup()
                .addGap(0, 72, Short.MAX_VALUE)
                .addGroup(PANEL_SONICLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVictoriaSonic, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTiempoSonic, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(305, 305, 305))
            .addGroup(PANEL_SONICLayout.createSequentialGroup()
                .addGroup(PANEL_SONICLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PANEL_SONICLayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(lblImagenSonic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PANEL_SONICLayout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PANEL_SONICLayout.setVerticalGroup(
            PANEL_SONICLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PANEL_SONICLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImagenSonic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTiempoSonic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblVictoriaSonic)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPANEL_CONTENEDOR.add(PANEL_SONIC, "Sonic");

        PANEL_NYANCAT.setBackground(new java.awt.Color(0, 4, 25));

        lblImagenNyancat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/nyancatGANADOR.gif"))); // NOI18N

        jLabel15.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("GANADOR: NYAN CAT");

        lblVictoriaNyan.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblVictoriaNyan.setForeground(new java.awt.Color(255, 255, 255));
        lblVictoriaNyan.setText("Victorias: ");

        lblTiempoNyan.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblTiempoNyan.setForeground(new java.awt.Color(255, 255, 255));
        lblTiempoNyan.setText("Tiempo: ");

        javax.swing.GroupLayout PANEL_NYANCATLayout = new javax.swing.GroupLayout(PANEL_NYANCAT);
        PANEL_NYANCAT.setLayout(PANEL_NYANCATLayout);
        PANEL_NYANCATLayout.setHorizontalGroup(
            PANEL_NYANCATLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PANEL_NYANCATLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(PANEL_NYANCATLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVictoriaNyan, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTiempoNyan, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(305, 305, 305))
            .addGroup(PANEL_NYANCATLayout.createSequentialGroup()
                .addGroup(PANEL_NYANCATLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PANEL_NYANCATLayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(lblImagenNyancat))
                    .addGroup(PANEL_NYANCATLayout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PANEL_NYANCATLayout.setVerticalGroup(
            PANEL_NYANCATLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PANEL_NYANCATLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImagenNyancat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTiempoNyan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblVictoriaNyan)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPANEL_CONTENEDOR.add(PANEL_NYANCAT, "NyanCat");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPANEL_CONTENEDOR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(btnContinuar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPANEL_CONTENEDOR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnContinuar)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
 * Acción que se ejecuta al hacer clic en el botón "CONTINUAR".
 * Este botón permite cerrar la vista del ganador y continuar con el flujo del programa.
 * El comportamiento específico debe ser implementado en esta sección.
 *
 * @param evt Evento de acción generado por el botón.
 */

    private void btnContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinuarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnContinuarActionPerformed

    
    

    /**
 * Retorna el panel contenedor principal donde se muestran los diferentes paneles
 * de ganadores según el personaje.
 * 
 * @return JPanel principal contenedor.
 */
public JPanel getjPANEL_CONTENEDOR() {
    return jPANEL_CONTENEDOR;
}

/**
 * Establece el panel contenedor principal donde se mostrarán los paneles
 * correspondientes a cada ganador.
 * 
 * @param jPANEL_CONTENEDOR Nuevo panel contenedor.
 */
public void setjPANEL_CONTENEDOR(JPanel jPANEL_CONTENEDOR) {
    this.jPANEL_CONTENEDOR = jPANEL_CONTENEDOR;
}

/**
 * Retorna el panel asociado al personaje Goku cuando es el ganador.
 * 
 * @return JPanel que muestra la victoria de Goku.
 */
public JPanel getPANEL_GOKU() {
    return PANEL_GOKU;
}

/**
 * Establece el panel que será mostrado cuando Goku sea el ganador.
 * 
 * @param PANEL_GOKU Panel correspondiente a la victoria de Goku.
 */
public void setPANEL_GOKU(JPanel PANEL_GOKU) {
    this.PANEL_GOKU = PANEL_GOKU;
}

/**
 * Retorna el panel asociado al personaje Nyan Cat cuando es el ganador.
 * 
 * @return JPanel que muestra la victoria de Nyan Cat.
 */
public JPanel getPANEL_NYANCAT() {
    return PANEL_NYANCAT;
}

/**
 * Establece el panel que será mostrado cuando Nyan Cat sea el ganador.
 * 
 * @param PANEL_NYANCAT Panel correspondiente a la victoria de Nyan Cat.
 */
public void setPANEL_NYANCAT(JPanel PANEL_NYANCAT) {
    this.PANEL_NYANCAT = PANEL_NYANCAT;
}


   /**
 * Retorna el panel asociado al personaje Pikachu cuando es el ganador.
 * 
 * @return JPanel que muestra la victoria de Pikachu.
 */
public JPanel getPANEL_PIKA() {
    return PANEL_PIKA;
}

/**
 * Establece el panel que será mostrado cuando Pikachu sea el ganador.
 * 
 * @param PANEL_PIKA Panel correspondiente a la victoria de Pikachu.
 */
public void setPANEL_PIKA(JPanel PANEL_PIKA) {
    this.PANEL_PIKA = PANEL_PIKA;
}

/**
 * Retorna el panel asociado al personaje Sonic cuando es el ganador.
 * 
 * @return JPanel que muestra la victoria de Sonic.
 */
public JPanel getPANEL_SONIC() {
    return PANEL_SONIC;
}

/**
 * Establece el panel que será mostrado cuando Sonic sea el ganador.
 * 
 * @param PANEL_SONIC Panel correspondiente a la victoria de Sonic.
 */
public void setPANEL_SONIC(JPanel PANEL_SONIC) {
    this.PANEL_SONIC = PANEL_SONIC;
}

/**
 * Retorna el botón que permite continuar después de mostrar el ganador.
 * 
 * @return JButton para continuar.
 */
public JButton getBtnContinuar() {
    return btnContinuar;
}

/**
 * Establece el botón que permite continuar después de mostrar el ganador.
 * 
 * @param btnContinuar Nuevo botón para continuar.
 */
public void setBtnContinuar(JButton btnContinuar) {
    this.btnContinuar = btnContinuar;
}


    /**
 * Retorna la etiqueta que muestra el tiempo obtenido por Goku.
 * 
 * @return JLabel con el tiempo de Goku.
 */
public JLabel getLblTiempoGoku() {
    return lblTiempoGoku;
}

/**
 * Establece la etiqueta que muestra el tiempo obtenido por Goku.
 * 
 * @param lblTiempoGoku Nueva etiqueta con el tiempo de Goku.
 */
public void setLblTiempoGoku(JLabel lblTiempoGoku) {
    this.lblTiempoGoku = lblTiempoGoku;
}

/**
 * Retorna la etiqueta que muestra el tiempo obtenido por Nyan Cat.
 * 
 * @return JLabel con el tiempo de Nyan Cat.
 */
public JLabel getLblTiempoNyan() {
    return lblTiempoNyan;
}

/**
 * Establece la etiqueta que muestra el tiempo obtenido por Nyan Cat.
 * 
 * @param lblTiempoNyan Nueva etiqueta con el tiempo de Nyan Cat.
 */
public void setLblTiempoNyan(JLabel lblTiempoNyan) {
    this.lblTiempoNyan = lblTiempoNyan;
}

/**
 * Retorna la etiqueta que muestra el tiempo obtenido por Pikachu.
 * 
 * @return JLabel con el tiempo de Pikachu.
 */
public JLabel getLblTiempoPika() {
    return lblTiempoPika;
}

/**
 * Establece la etiqueta que muestra el tiempo obtenido por Pikachu.
 * 
 * @param lblTiempoPika Nueva etiqueta con el tiempo de Pikachu.
 */
public void setLblTiempoPika(JLabel lblTiempoPika) {
    this.lblTiempoPika = lblTiempoPika;
}


    /**
 * Retorna la etiqueta que muestra el tiempo obtenido por Sonic.
 * 
 * @return JLabel con el tiempo de Sonic.
 */
public JLabel getLblTiempoSonic() {
    return lblTiempoSonic;
}

/**
 * Establece la etiqueta que muestra el tiempo obtenido por Sonic.
 * 
 * @param lblTiempoSonic Nueva etiqueta con el tiempo de Sonic.
 */
public void setLblTiempoSonic(JLabel lblTiempoSonic) {
    this.lblTiempoSonic = lblTiempoSonic;
}

/**
 * Retorna la etiqueta que muestra el número de victorias de Goku.
 * 
 * @return JLabel con las victorias de Goku.
 */
public JLabel getLblVictoriaGoku() {
    return lblVictoriaGoku;
}

/**
 * Establece la etiqueta que muestra el número de victorias de Goku.
 * 
 * @param lblVictoriaGoku Nueva etiqueta con las victorias de Goku.
 */
public void setLblVictoriaGoku(JLabel lblVictoriaGoku) {
    this.lblVictoriaGoku = lblVictoriaGoku;
}

/**
 * Retorna la etiqueta que muestra el número de victorias de Nyan Cat.
 * 
 * @return JLabel con las victorias de Nyan Cat.
 */
public JLabel getLblVictoriaNyan() {
    return lblVictoriaNyan;
}

/**
 * Establece la etiqueta que muestra el número de victorias de Nyan Cat.
 * 
 * @param lblVictoriaNyan Nueva etiqueta con las victorias de Nyan Cat.
 */
public void setLblVictoriaNyan(JLabel lblVictoriaNyan) {
    this.lblVictoriaNyan = lblVictoriaNyan;
}


    /**
 * Retorna la etiqueta que muestra el número de victorias de Pikachu.
 * 
 * @return JLabel con las victorias de Pikachu.
 */
public JLabel getLblVictoriaPika() {
    return lblVictoriaPika;
}

/**
 * Establece la etiqueta que muestra el número de victorias de Pikachu.
 * 
 * @param lblVictoriaPika Nueva etiqueta con las victorias de Pikachu.
 */
public void setLblVictoriaPika(JLabel lblVictoriaPika) {
    this.lblVictoriaPika = lblVictoriaPika;
}

/**
 * Retorna la etiqueta que muestra el número de victorias de Sonic.
 * 
 * @return JLabel con las victorias de Sonic.
 */
public JLabel getLblVictoriaSonic() {
    return lblVictoriaSonic;
}

/**
 * Establece la etiqueta que muestra el número de victorias de Sonic.
 * 
 * @param lblVictoriaSonic Nueva etiqueta con las victorias de Sonic.
 */
public void setLblVictoriaSonic(JLabel lblVictoriaSonic) {
    this.lblVictoriaSonic = lblVictoriaSonic;
}

/**
 * Retorna la etiqueta con la imagen del personaje Goku ganador.
 * 
 * @return JLabel con la imagen de Goku.
 */
public JLabel getLblImagenGoku() {
    return lblImagenGoku;
}

/**
 * Establece la etiqueta con la imagen del personaje Goku ganador.
 * 
 * @param lblImagenGoku Nueva etiqueta con la imagen de Goku.
 */
public void setLblImagenGoku(JLabel lblImagenGoku) {
    this.lblImagenGoku = lblImagenGoku;
}


   /**
 * Retorna la etiqueta con la imagen del personaje Nyan Cat ganador.
 * 
 * @return JLabel con la imagen de Nyan Cat.
 */
public JLabel getLblImagenNyancat() {
    return lblImagenNyancat;
}

/**
 * Establece la etiqueta con la imagen del personaje Nyan Cat ganador.
 * 
 * @param lblImagenNyancat Nueva etiqueta con la imagen de Nyan Cat.
 */
public void setLblImagenNyancat(JLabel lblImagenNyancat) {
    this.lblImagenNyancat = lblImagenNyancat;
}

/**
 * Retorna la etiqueta con la imagen del personaje Pikachu ganador.
 * 
 * @return JLabel con la imagen de Pikachu.
 */
public JLabel getLblImagenPikachu() {
    return lblImagenPikachu;
}

/**
 * Establece la etiqueta con la imagen del personaje Pikachu ganador.
 * 
 * @param lblImagenPikachu Nueva etiqueta con la imagen de Pikachu.
 */
public void setLblImagenPikachu(JLabel lblImagenPikachu) {
    this.lblImagenPikachu = lblImagenPikachu;
}

/**
 * Retorna la etiqueta con la imagen del personaje Sonic ganador.
 * 
 * @return JLabel con la imagen de Sonic.
 */
public JLabel getLblImagenSonic() {
    return lblImagenSonic;
}

/**
 * Establece la etiqueta con la imagen del personaje Sonic ganador.
 * 
 * @param lblImagenSonic Nueva etiqueta con la imagen de Sonic.
 */
public void setLblImagenSonic(JLabel lblImagenSonic) {
    this.lblImagenSonic = lblImagenSonic;
}

    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PANEL_GOKU;
    private javax.swing.JPanel PANEL_NYANCAT;
    private javax.swing.JPanel PANEL_PIKA;
    private javax.swing.JPanel PANEL_SONIC;
    private javax.swing.JButton btnContinuar;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPANEL_CONTENEDOR;
    private javax.swing.JLabel lblImagenGoku;
    private javax.swing.JLabel lblImagenNyancat;
    private javax.swing.JLabel lblImagenPikachu;
    private javax.swing.JLabel lblImagenSonic;
    private javax.swing.JLabel lblTiempoGoku;
    private javax.swing.JLabel lblTiempoNyan;
    private javax.swing.JLabel lblTiempoPika;
    private javax.swing.JLabel lblTiempoSonic;
    private javax.swing.JLabel lblVictoriaGoku;
    private javax.swing.JLabel lblVictoriaNyan;
    private javax.swing.JLabel lblVictoriaPika;
    private javax.swing.JLabel lblVictoriaSonic;
    // End of variables declaration//GEN-END:variables
}
